apply plugin: 'com.android.application'

android {
    compileSdkVersion compileSdk
    defaultConfig {
        applicationId "com.autoplayvideo"
        minSdkVersion minSdk
        targetSdkVersion targetSdk
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testImplementation 'junit:junit:4.12'

    implementation "com.android.support:appcompat-v7:${support_lib}"
    implementation "com.android.support:design:${support_lib}"

    implementation "com.jakewharton:butterknife:${butterknife_lib}"
    annotationProcessor "com.jakewharton:butterknife-compiler:${butterknife_lib}"

    implementation "jp.wasabeef:glide-transformations:${glide_lib}"

    implementation "com.google.android.exoplayer:exoplayer-core:${exo_player_lib}"
    implementation "com.google.android.exoplayer:exoplayer-ui:${exo_player_lib}"

    implementation "im.ene.toro3:toro:${toro_lib}"
    implementation "im.ene.toro3:toro-ext-exoplayer:${toro_lib}"

    configurations.all {
        exclude group: 'com.android.support', module: 'support-v4'

        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            def requested = details.requested
            if (requested.group == 'com.android.support') {
                if (!requested.name.startsWith("multidex")) {
                    details.useVersion "${support_lib}"
                }
            }
        }
    }

}
